pipeline {
    agent any

    tools {
        maven 'maven'  // Ensure Maven is installed via Jenkins tools
    }

    environment {
        NEXUS_URL = 'http://nexus:8081'
        NEXUS_REPOSITORY = 'maven-releases'
        ARTIFACT_GROUP = 'com.example'
        ARTIFACT_ID = 'user-management'
        ARTIFACT_VERSION = '1.1.2'
        ARTIFACT_FILE = "target/${ARTIFACT_ID}-${ARTIFACT_VERSION}.jar"
        NEXUS_CREDENTIALS = 'nexus'  // Credential ID stored in Jenkins
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', credentialsId: 'jenkins-github-pat', url: 'https://github.com/Prasadrasal2002/java-app-docker1.git'
            }
        }

        stage('Build with Maven') {
            steps {
                dir('java') {
                    script {
                        sh 'mvn clean package -DskipTests'
                    }
                }
            }
        }

        stage('Upload to Nexus') {
            steps {
                dir('java') {
                    script {
                        if (fileExists("${ARTIFACT_FILE}")) {
                            withCredentials([usernamePassword(credentialsId: "${NEXUS_CREDENTIALS}", usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                                sh """
                                mvn deploy:deploy-file \
                                    -Durl=${NEXUS_URL}/repository/${NEXUS_REPOSITORY}/ \
                                    -DrepositoryId=nexus \
                                    -Dfile=${ARTIFACT_FILE} \
                                    -DgroupId=${ARTIFACT_GROUP} \
                                    -DartifactId=${ARTIFACT_ID} \
                                    -Dversion=${ARTIFACT_VERSION} \
                                    -Dpackaging=jar \
                                    -DgeneratePom=true \
                                    -DrepositoryLayout=default \
                                    -Dusername=${NEXUS_USER} \
                                    -Dpassword=${NEXUS_PASS}
                                """
                            }
                        } else {
                            error "Artifact ${ARTIFACT_FILE} not found! Build may have failed."
                        }
                    }
                }
            }
        }

        stage('Download and Deploy Artifact') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${NEXUS_CREDENTIALS}", usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                    script {
                        sh """
                        set -e  # Exit on error
                        echo "Downloading artifact from Nexus..."
                        curl -u $NEXUS_USER:$NEXUS_PASS -o ${ARTIFACT_ID}.jar ${NEXUS_URL}/repository/${NEXUS_REPOSITORY}/${ARTIFACT_GROUP.replace('.', '/')}/${ARTIFACT_ID}/${ARTIFACT_VERSION}/${ARTIFACT_ID}-${ARTIFACT_VERSION}.jar
                        ls -lah ${ARTIFACT_ID}.jar

                        echo "Deploying application..."
                        nohup java -jar ${ARTIFACT_ID}.jar > /dev/null 2>&1 &
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            script {
                echo 'Pipeline completed successfully!'
            }
        }
        failure {
            script {
                echo 'Pipeline failed! Check the logs for details.'
            }
        }
    }
}
